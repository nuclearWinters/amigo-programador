type UpdateCurrentModulePayload {
  error: String
  module: Int!
  accessToken: String
  clientMutationId: String
}

input UpdateCurrentModuleInput {
  name: String!
  refreshToken: String!
  moduleIndex: Int!
  clientMutationId: String
}

type UpdateCurrentTopicPayload {
  error: String
  topic: String!
  accessToken: String
  clientMutationId: String
}

input UpdateCurrentTopicInput {
  refreshToken: String!
  topic: String!
  clientMutationId: String
}

type SignUpPayload {
  refreshToken: String!
  accessToken: String!
  clientMutationId: String
}

input SignUpInput {
  username: String!
  email: String!
  password: String!
  clientMutationId: String
}

type SignInPayload {
  refreshToken: String!
  accessToken: String!
  clientMutationId: String
}

input SignInInput {
  email: String!
  password: String!
  clientMutationId: String
}

type UpdateCurrentTopicAndModulePayload {
  topic: Int!
  modules: CurrentModules!
}

type Mutation {
  signUp(input: SignUpInput!): SignUpPayload!
  signIn(input: SignInInput!): SignInPayload!
  updateCurrentTopic(
    input: UpdateCurrentTopicInput!
  ): UpdateCurrentTopicPayload!
  updateCurrentModule(
    input: UpdateCurrentModuleInput!
  ): UpdateCurrentModulePayload!
}

type Query {
  user(id: String!, refreshToken: String!): User
  node(id: ID!, refreshToken: String!): Node
}

type CommentOnComment implements Node {
  id: ID!
  likes: Int!
  comment: String!
  name: String!
  created: String!
  liked: Boolean!
  idParentComment: String!
}

type CommentOnCommentConnection {
  pageInfo: PageInfo!
  edges: [CommentOnCommentEdge]
}

type CommentOnCommentEdge {
  node: CommentOnComment
  cursor: String!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Homework implements Node {
  id: ID!
}

type HomeworkEdge {
  node: Homework
  cursor: String!
}

type CurrentModules {
  QuickStart: Int!
  HTML: Int!
  CSS: Int!
  Javascript: Int!
  React: Int!
  Node: Int!
  Express: Int!
  MongoDB: Int!
}

type User implements Node {
  id: ID!
  username: String!
  currentTopic: String!
  currentModules: CurrentModules!
}
